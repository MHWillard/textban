MVP for txtban:
-tasks.txt
-UI: C#, desktop only
-each task: drag and drop rearranging in list
-tasks can be dragged to category: each category has a dropdown that lets you close/expand
-each task has: edit, trash button
-add new tasks with text bar at top
-all UI does is read/render tasks.txt (updates tasks based on drag and drop)
-done button: instantly move it to done category
-categories: ready, waiting, backlog, done: top to bottom column

MVP BACKLOG:
-Each task can be dragged into Ready, Waiting, Backlog, Done categories.
-Each task has a button that edits the text of the task.
-There is a scrollbar on the right side if the categories are expanded off-screen for scrolling up and down.

=DONE=
-Set up to-do list example for Avalonia UI and push to git.
-Set up editor for test-driven development and unit test writing.
-UI reads tasks.txt text file and loads each line as text into UI.
-New tasks can be added in UI text field which updates tasks.txt.
-Tasks persist even after the window is closed.
-There are four catergories: Ready, Waiting, Backlog, Done.
-Each category is an expandable dropdown menu.
-When a task is added, it appears near the end of the current backlog of tasks under the Backlog category.
-Each task has a button that deletes the task.